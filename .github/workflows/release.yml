name: Release

on:
  workflow_dispatch:

jobs:
  build_app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: audio-share-app
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      hash: ${{ steps.get_hash.outputs.hash }}
    env:
      store_pass: ${{ secrets.STORE_PASS }}
      key_alias: ${{ secrets.KEY_ALIAS }}
      key_pass: ${{ secrets.KEY_PASS }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - run: mkdir ~/.android && echo "$release_jks" | base64 -d > ~/.android/release.jks
      env:
        release_jks: ${{ secrets.RELEASE_JKS }}
    - run: chmod +x gradlew
    - run: ./gradlew :app:assembleRelease
    - run: ./gradlew :app:signingReport
    - run: sed -En 's/\s*versionName\s+"([^"]*)"/version=\1/p' app/build.gradle >> $GITHUB_OUTPUT
      id: get_version
    - uses: actions/upload-artifact@v3
      with:
        name: app
        path: audio-share-app/app/build/outputs/apk/release/*.apk
    - run: sha256sum app/build/outputs/apk/release/*.apk | awk '{ printf "hash=%s", $1 }' >> $GITHUB_OUTPUT
      id: get_hash
      
  build_server:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: audio-share-server
    outputs:
      hash: ${{ steps.get_hash.outputs.hash }}
    steps:
    - uses: actions/checkout@v3
    - uses: microsoft/setup-msbuild@v1
    - uses: lukka/run-vcpkg@v11.1
      with:
        vcpkgGitCommitId: 9edb1b8e590cc086563301d735cae4b6e732d2d2
    - run: vcpkg integrate install
    - run: vcpkg install asio:x64-windows-static-md protobuf:x64-windows-static-md spdlog:x64-windows-static-md
    - run: msbuild /m /p:Configuration=Release
    - uses: actions/upload-artifact@v3
      with:
        name: server
        path: audio-share-server/x64/Release/*.exe
    - run: sha256sum x64/Release/*.exe | awk '{ printf "hash=%s", $1 }' >> $GITHUB_OUTPUT
      id: get_hash
      shell: bash
    
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [ build_app, build_server ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: app
    - uses: actions/download-artifact@v2
      with:
        name: server
    - run: 'echo -e "sha256sum:\n$(ls *.apk): ${app_hash}\n$(ls *.exe): ${server_hash}\n" > notes'
      env:
        app_hash: ${{ needs.build_app.outputs.hash }}
        server_hash: ${{ needs.build_server.outputs.hash }}
    - run: gh release create "v$VERSION" -d -F notes -t "v$VERSION" *.apk *.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ needs.build_app.outputs.version }}
