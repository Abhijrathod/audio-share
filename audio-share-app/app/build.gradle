plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.protobuf'
}

android {
    namespace 'io.github.mkckr0.audio_share_app'
    compileSdk 33

    defaultConfig {
        applicationId "io.github.mkckr0.audio_share_app"
        minSdk 28
        targetSdk 33
        versionCode 2
        versionName "0.0.5"
        archivesBaseName = "${rootProject.name}-$versionName"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            proto {
                srcDir '../../protos'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.google.protobuf:protobuf-kotlin-lite:3.21.12'
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.85.Final'

}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.8'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                kotlin {
                    option 'lite'
                }
                java {
                    option 'lite'
                }
            }
        }
    }
}
